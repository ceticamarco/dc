#!/bin/sh

utest() {
    PROGRAM="$PWD/build/dc"
    EXPECTED="5"
    ACTUAL=$("$PROGRAM" -e '25 v p')
    assert_eq "$EXPECTED" "$ACTUAL"

    # Test empty stack
    EXPECTED="'v' requires one operand"
    ACTUAL=$("$PROGRAM" -e 'v' 2>&1) || true
    assert_eq "$EXPECTED" "$ACTUAL"

    # Test non numerical values
    EXPECTED="'v' requires numeric values"
    ACTUAL=$("$PROGRAM" -e '[ foo ] v' 2>&1) || true
    assert_eq "$EXPECTED" "$ACTUAL"

    # Test complex number
    if [ "$(uname -s)" = "Darwin" ] && [ "$(uname -m)" = "arm64" ]; then
        # Apple Silicon treats complex number arithmetics in a slightly
        # different way, therefore we need to adjust the test for this platform
        EXPECTED="(0.00,1)"
        ACTUAL=$("$PROGRAM" -e '-1 v p')
        assert_eq "$EXPECTED" "$ACTUAL"
    else
        EXPECTED="(0,1)"
        ACTUAL=$("$PROGRAM" -e '-1 v p')
        assert_eq "$EXPECTED" "$ACTUAL"
    fi
}
# vim: ts=4 sw=4 softtabstop=4 expandtab:
